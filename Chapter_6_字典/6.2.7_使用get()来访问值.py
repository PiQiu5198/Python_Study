#使用放在方括号内的键从字典中获取感兴趣的值，可能会引发问题：
#如果指定的键不存在，就将出错。

#如果你要求获取外星人的分数，而这个外星人没有分数，结果将如何呢？
alien_0 = {'color': 'green', 'speed': 'slow'}
#print(alien_0['point'])
#这将导致Python显示traceback，指出存在键值错误（KeyError）：
#第十章将详细介绍如何处理类似的错误。
#就字典而言，为避免出现这样的错误，可使用get()方法在指定的键不存在时返回一个默认值。
#get()方法的第一个参数用于指定键，是必不可少的；
#第二个参数为当指定的键不存在时要返回的值，是可选的：
alien_0 = {'color': 'green', 'speed': 'slow'}

point_value = alien_0.get('points', 'No point value assigned.')
print(point_value)
#如果字典中有键'points'，将获得与之关联的值；
#如果没有，将获得指定的默认值。
#虽然这里没有键'points'，但是我们将获得一条清晰的消息，不会引发错误。
#如果指定的键有可能不存在，应考虑使用get()方法，而不要使用方括号表示法。

#注意：在调用get()时，如果没有指定第二个参数且指定的键不存在，Python将返回值None，
#这个特殊的值表示没有相应的值。
#这并非错误，None只是一个表示所需值不存在的特殊值，第8章将介绍它的其他用途。